name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main" ]

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install uv
        run: pip install uv

      - name: Install dependencies
        run: uv sync --all-groups

      - name: Run pre-commit hooks
        uses: pre-commit/action@v3.0.1

  test:
    needs: quality
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        run: pip install uv

      - name: Install tox
        run: uv sync --all-groups

      - name: Test with tox
        run: uv run tox

  build:
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            asset_name: anef_checker_linux
          - os: windows-latest
            asset_name: anef_checker_windows.exe
          - os: macos-latest
            asset_name: anef_checker_macos

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install uv
        run: pip install uv

      - name: Install dependencies
        run: uv sync --all-groups

      - name: Build package
        run: |
          uv build
          uv run twine check dist/*

      - name: Build executable
        run: |
          uv run flet pack --name ${{ matrix.asset_name }} src/anef_checker/gui/gui.py --icon assets/img/favicon.png --yes --pyinstaller-build-args="--console"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: dist/${{ matrix.asset_name }}*

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            anef_checker_linux/anef_checker_linux
            anef_checker_windows.exe/anef_checker_windows.exe
            anef_checker_macos/anef_checker_macos
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
